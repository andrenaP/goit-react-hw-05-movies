{"version":3,"file":"static/js/632.fbf2ca3e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/css/Movies.module.css?bbc2","components/pages/Movies.jsx","components/service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"LinkToItem\":\"Movies_LinkToItem__WMzNp\",\"FilmItem\":\"Movies_FilmItem__p6tOS\"};","import { useState, useEffect } from 'react';\nimport ApiServiceClass from '../service';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport css from '../css/Movies.module.css';\nconst ApiService = new ApiServiceClass();\n\nconst PosterFirstPart = 'https://image.tmdb.org/t/p/w220_and_h330_face/';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setquery] = useState(searchParams.get('query') ?? '');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const searchRequest = searchParams.get('query');\n  const location = useLocation();\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setLoading(true);\n\n    ApiService.Movie(query)\n      .then(json => {\n        setMovies(json);\n        if (json.length === 0) Notiflix.Notify.warning('There is no result');\n      })\n      .catch(err => {\n        setError(err);\n      })\n      .finally(() => {\n        setLoading(false);\n        setquery('');\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchRequest]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      Notiflix.Notify.warning('Enter the film title');\n    }\n\n    setMovies([]);\n    // console.log(query !== '');\n    //setSearchParams({ query: query });\n\n    setSearchParams(query !== '' ? { query: query } : {});\n  };\n  return (\n    <>\n      <h1>Movie Search</h1>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"Film\"\n          id=\"film\"\n          onChange={event => setquery(event.target.value.toLowerCase())}\n          value={query}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && 'Loading...'}\n      {error && Notiflix.Notify.failure(`Error: ${error}`)}\n      {movies.length !== 0 && (\n        <ul>\n          {movies.map(({ id, original_title, poster_path }) => {\n            return (\n              <li key={id} className={css.FilmItem}>\n                <Link\n                  className={css.LinkToItem}\n                  to={`${id}`}\n                  state={{ form: location }}\n                >\n                  <img\n                    src={PosterFirstPart + poster_path}\n                    alt={original_title}\n                  />\n                  {original_title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","// const language = 'language=en-US';\n\nexport default class GetApiService {\n  async All() {\n    const url =\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US&include_adult=false';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n  async Movie(query, page = 1) {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n  async Details(id) {\n    const url = `https://api.themoviedb.org/3/movie/${id}?language=en-US`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options).then(res => res.json());\n    //.then(json => json.results)\n  }\n\n  async Credits(id) {\n    const url = `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.cast);\n  }\n  async Reviews(id, page = 1) {\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=${page}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n}\n"],"names":["ApiService","ApiServiceClass","useSearchParams","searchParams","setSearchParams","useState","get","query","setquery","movies","setMovies","error","setError","loading","setLoading","searchRequest","location","useLocation","useEffect","Movie","then","json","length","Notiflix","catch","err","finally","action","onSubmit","event","preventDefault","trim","type","name","id","onChange","target","value","toLowerCase","map","original_title","poster_path","className","css","to","state","form","src","alt","GetApiService","options","method","headers","accept","Authorization","fetch","res","results","page","url","cast"],"sourceRoot":""}