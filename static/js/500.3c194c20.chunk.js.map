{"version":3,"file":"static/js/500.3c194c20.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/PageHeading/PageHeading.jsx","components/service.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"FilmItem\":\"MovieList_FilmItem__jCYfA\",\"LinkToItem\":\"MovieList_LinkToItem__JmgIQ\",\"ListOfBooks\":\"MovieList_ListOfBooks__ksy1q\",\"img\":\"MovieList_img__Tmz2C\",\"MoviesList\":\"MovieList_MoviesList__tGAU3\"};","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MovieList.module.css';\nimport defaultIMG from 'picture/NoImage.jpg';\nimport { Link } from 'react-router-dom';\nconst PosterFirstPart = 'https://image.tmdb.org/t/p/w220_and_h330_face/';\n\nconst MovieList = ({ moviesList }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.MoviesList}>\n      {moviesList.map(({ id, original_title, poster_path }) => (\n        <li key={id} className={css.FilmItem}>\n          <Link\n            className={css.LinkToItem}\n            to={`/movies/${id}`}\n            state={{ form: location }}\n          >\n            <img\n              src={poster_path ? PosterFirstPart + poster_path : defaultIMG}\n              alt={original_title}\n              className={css.img}\n            />\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  MoviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string,\n    })\n  ),\n};\n","const PageHeading = ({ children }) => {\n  return <h1>{children}</h1>;\n};\nexport default PageHeading;\n","// const language = 'language=en-US';\n\nexport default class GetApiService {\n  async All() {\n    const url =\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US&include_adult=false';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n  async Movie(query, page = 1) {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n  async Details(id) {\n    const url = `https://api.themoviedb.org/3/movie/${id}?language=en-US`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options).then(res => res.json());\n    //.then(json => json.results)\n  }\n\n  async Credits(id) {\n    const url = `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.cast);\n  }\n  async Reviews(id, page = 1) {\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=${page}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n}\n","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setquery] = useState(''); //useState(searchParams.get('query') ?? '');\n  const onFormSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      Notiflix.Notify.warning('Enter the film title');\n      return;\n    }\n\n    onSubmit(query.trim());\n    setquery('');\n  };\n  return (\n    <form action=\"\" onSubmit={onFormSubmit}>\n      <input\n        type=\"text\"\n        name=\"Film\"\n        id=\"film\"\n        onChange={event => setquery(event.target.value.toLowerCase())}\n        value={query}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport ApiServiceClass from '../components/service';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport MovieList from '../components/MovieList/MovieList';\nimport PageHeading from '../components/PageHeading/PageHeading';\nconst ApiService = new ApiServiceClass();\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const searchRequest = searchParams.get('query');\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n    setLoading(true);\n\n    ApiService.Movie(searchRequest)\n      .then(data => {\n        if (data.length === 0) {\n          Notiflix.Notify.warning('There is no result');\n          return;\n        }\n        setMovies(data);\n      })\n      .catch(err => {\n        setError(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [searchRequest]);\n\n  const handleSubmit = query => {\n    if (query !== searchRequest) {\n      setMovies([]);\n      setSearchParams(query !== '' ? { query: query } : {});\n      // setquery('');\n    } else Notiflix.Notify.warning(`${query} was already found`);\n  };\n  return (\n    <>\n      <PageHeading>Movie Search</PageHeading>\n      <SearchBar onSubmit={handleSubmit} />\n      {loading && 'Loading...'}\n      {error && Notiflix.Notify.failure(`Error: ${error}`)}\n      {movies.length !== 0 && <MovieList moviesList={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["moviesList","location","useLocation","className","css","map","id","original_title","poster_path","to","state","form","src","defaultIMG","alt","children","GetApiService","options","method","headers","accept","Authorization","fetch","then","res","json","results","query","page","url","cast","onSubmit","useState","setquery","action","event","preventDefault","trim","Notiflix","type","name","onChange","target","value","toLowerCase","ApiService","ApiServiceClass","useSearchParams","searchParams","setSearchParams","movies","setMovies","error","setError","loading","setLoading","searchRequest","get","useEffect","Movie","data","length","catch","err","finally","PageHeading","MovieList"],"sourceRoot":""}