{"version":3,"file":"static/js/92.a38c3de2.chunk.js","mappings":"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","sources":["components/service.js","webpack://goit-react-hw-05-movies/./src/css/MoviesDetails.module.css?9f2b","pages/MoviesDetails.jsx"],"sourcesContent":["// const language = 'language=en-US';\n\nexport default class GetApiService {\n  async All() {\n    const url =\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US&include_adult=false';\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n  async Movie(query, page = 1) {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n  async Details(id) {\n    const url = `https://api.themoviedb.org/3/movie/${id}?language=en-US`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options).then(res => res.json());\n    //.then(json => json.results)\n  }\n\n  async Credits(id) {\n    const url = `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.cast);\n  }\n  async Reviews(id, page = 1) {\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=${page}`;\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTA2OTg2YTMwZWVkNDNmMjRmZjJhZmE5ZGY0N2FiOCIsInN1YiI6IjY0ZDg4MzEzZDEwMGI2MDExYzgyM2U2ZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.a8rp64-ZzW-scI2R6ybCgpdPObOATyZzVgg59Sy_an8',\n      },\n    };\n\n    return fetch(url, options)\n      .then(res => res.json())\n      .then(json => json.results);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"GroupOfLinks\":\"MoviesDetails_GroupOfLinks__ysJW6\"};","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport Notiflix from 'notiflix';\nimport ApiServiceClass from '../components/service';\nimport css from '../css/MoviesDetails.module.css';\nimport defaultIMG from 'picture/NoImage.jpg';\n\nconst ApiService = new ApiServiceClass();\n\nconst MoviesDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const getYear = () => new Date(movieInfo.release_date).getFullYear();\n  const params = useParams();\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.form ?? '/movies');\n  const { movieId } = params;\n  useEffect(() => {\n    setLoading(true);\n    ApiService.Details(movieId)\n      .then(data => setMovieInfo(data))\n      .catch(err => {\n        setError(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (!movieInfo) return;\n  const IMGforMovies = movieInfo.poster_path\n    ? `https://image.tmdb.org/t/p/w200/${movieInfo.poster_path}`\n    : defaultIMG;\n  return (\n    <main>\n      <Link to={backLinkHref.current}>Back to products</Link>\n      <br />\n      {error && Notiflix.Notify.failure(`Error: ${error}`)}\n      {loading && 'Loading ...'}\n      {movieInfo && (\n        <>\n          <img src={IMGforMovies} alt={movieInfo.title} />\n          <h1>{movieInfo.title + ' ' + String(getYear())}</h1>\n          <p>User Score: {movieInfo.popularity}%</p>\n          <div className=\"movie_overview\">\n            <h2>Overview</h2>\n            <p>{movieInfo.overview}</p>\n          </div>\n          <h3>Additional Information</h3>\n          <ul className={css.GroupOfLinks}>\n            <li>\n              {' '}\n              <Link className={css.LinkToItem} to={'cast'}>\n                cast\n              </Link>\n            </li>\n            <li>\n              {' '}\n              <Link className={css.LinkToItem} to={'reviews'}>\n                reviews\n              </Link>\n            </li>\n          </ul>\n\n          <Outlet></Outlet>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["GetApiService","options","method","headers","accept","Authorization","fetch","then","res","json","results","query","page","url","id","cast","ApiService","ApiServiceClass","useState","movieInfo","setMovieInfo","error","setError","loading","setLoading","params","useParams","location","useLocation","backLinkHref","useRef","state","form","movieId","useEffect","Details","data","catch","err","finally","IMGforMovies","poster_path","defaultIMG","to","current","Notiflix","src","alt","title","String","Date","release_date","getFullYear","popularity","className","overview","css"],"sourceRoot":""}